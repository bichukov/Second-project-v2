#!/usr/bin/env php
<?php
require 'vendor/autoload.php';
use Arrilot\BitrixMigrations\Commands\ArchiveCommand;
use Arrilot\BitrixMigrations\Commands\MakeCommand;
use Arrilot\BitrixMigrations\Commands\InstallCommand;
use Imedia\Migrator\Commands\MigrateCommand;
use Arrilot\BitrixMigrations\Commands\RollbackCommand;
use Arrilot\BitrixMigrations\Commands\TemplatesCommand;
use Arrilot\BitrixMigrations\Commands\StatusCommand;
use Arrilot\BitrixMigrations\Constructors\IBlock;
use Arrilot\BitrixMigrations\Migrator;
use Arrilot\BitrixMigrations\Storages\BitrixDatabaseStorage;
use Arrilot\BitrixMigrations\TemplatesCollection;
use Symfony\Component\Console\Application;

define("NOT_CHECK_PERMISSIONS", true);
$_SERVER["DOCUMENT_ROOT"] = realpath(__DIR__.'/../../../');
$DOCUMENT_ROOT = $_SERVER["DOCUMENT_ROOT"];
require $_SERVER["DOCUMENT_ROOT"]."/bitrix/modules/main/include/prolog_before.php";

// Off exception handler by bitrix
restore_exception_handler();
//set_exception_handler(function($e) {
//    throw $e;
//});

CModule::IncludeModule("iblock");
CModule::IncludeModule("imedia.migrator");

$config = [
    'table' => \Imedia\Migrator\Entity\MigratorTable::getTableName(),
    'dir' => $_SERVER["DOCUMENT_ROOT"].'/local/migrations',
    // 'dir_archive' => 'archive', // not required. default = "archive"
    'use_transaction' => true, // not required. default = false
    'default_fields' => [
        IBlock::class => [
            'INDEX_ELEMENT' => 'N',
            'INDEX_SECTION' => 'N',
            'VERSION' => 2,
            'SITE_ID' => 's1',
        ]
    ]
];

$database = new BitrixDatabaseStorage($config['table']);
$templates = new TemplatesCollection();
$templates->registerBasicTemplates();
$templates->registerTemplate(array(
    'name' => 'sql',
    'path' => __DIR__ . '/templates/sqlbatch',
    'description' => 'Run sql from file'
));
$templates->registerTemplate(array(
    'name' => 'event',
    'path' => __DIR__ . '/templates/events',
    'description' => 'Add bx events'
));

$migrator = new Migrator($config, $templates, $database);

$app = new Application('Migrator');
$app->setCatchExceptions(false);
$app->add(new MakeCommand($migrator));
$app->add(new InstallCommand($config['table'], $database));
$app->add(new MigrateCommand($migrator));
$app->add(new RollbackCommand($migrator));
$app->add(new TemplatesCommand($templates));
$app->add(new StatusCommand($migrator));
$app->add(new ArchiveCommand($migrator));
$app->run();
